[{"E:\\Bootcamp\\git-match\\client\\src\\index.js":"1","E:\\Bootcamp\\git-match\\client\\src\\App.js":"2","E:\\Bootcamp\\git-match\\client\\src\\pages\\Home.js":"3","E:\\Bootcamp\\git-match\\client\\src\\pages\\CreateProject.js":"4","E:\\Bootcamp\\git-match\\client\\src\\pages\\NotFound.js":"5","E:\\Bootcamp\\git-match\\client\\src\\pages\\Signup.js":"6","E:\\Bootcamp\\git-match\\client\\src\\components\\Nav.js":"7","E:\\Bootcamp\\git-match\\client\\src\\pages\\Dashboard.js":"8","E:\\Bootcamp\\git-match\\client\\src\\pages\\Login.js":"9","E:\\Bootcamp\\git-match\\client\\src\\components\\Header.js":"10","E:\\Bootcamp\\git-match\\client\\src\\components\\Project.js":"11","E:\\Bootcamp\\git-match\\client\\src\\components\\Footer.js":"12","E:\\Bootcamp\\git-match\\client\\src\\pages\\Profile.js":"13","E:\\Bootcamp\\git-match\\client\\src\\components\\Matches.js":"14","E:\\Bootcamp\\git-match\\client\\src\\utils\\mutations.js":"15","E:\\Bootcamp\\git-match\\client\\src\\utils\\auth.js":"16","E:\\Bootcamp\\git-match\\client\\src\\utils\\queries.js":"17","E:\\Bootcamp\\git-match\\client\\src\\components\\Match.js":"18","E:\\Bootcamp\\git-match\\client\\src\\components\\Modal.js":"19"},{"size":266,"mtime":1647044719695,"results":"20","hashOfConfig":"21"},{"size":3284,"mtime":1647219934078,"results":"22","hashOfConfig":"21"},{"size":1251,"mtime":1647148501358,"results":"23","hashOfConfig":"21"},{"size":0,"mtime":1647044719695,"results":"24","hashOfConfig":"21"},{"size":0,"mtime":1647044719696,"results":"25","hashOfConfig":"21"},{"size":4156,"mtime":1647133354355,"results":"26","hashOfConfig":"21"},{"size":244,"mtime":1647148501343,"results":"27","hashOfConfig":"21"},{"size":953,"mtime":1647306482795,"results":"28","hashOfConfig":"21"},{"size":2690,"mtime":1647044719696,"results":"29","hashOfConfig":"21"},{"size":1215,"mtime":1647219934152,"results":"30","hashOfConfig":"21"},{"size":1072,"mtime":1647219934156,"results":"31","hashOfConfig":"21"},{"size":788,"mtime":1647219934147,"results":"32","hashOfConfig":"21"},{"size":6387,"mtime":1647314679922,"results":"33","hashOfConfig":"21"},{"size":638,"mtime":1647314652216,"results":"34","hashOfConfig":"21"},{"size":1809,"mtime":1647307002749,"results":"35","hashOfConfig":"21"},{"size":769,"mtime":1647148501366,"results":"36","hashOfConfig":"21"},{"size":2091,"mtime":1647303618112,"results":"37","hashOfConfig":"21"},{"size":0,"mtime":1647044719693,"results":"38","hashOfConfig":"21"},{"size":980,"mtime":1647312909743,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"oail6",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Bootcamp\\git-match\\client\\src\\index.js",[],["86","87"],"E:\\Bootcamp\\git-match\\client\\src\\App.js",["88","89","90","91"],"import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport Dashboard from './pages/Dashboard';\nimport Project from './components/Project';\nimport Profile from './pages/Profile';\nimport CreateProject from './pages/CreateProject';\nimport NotFound from './pages/NotFound';\nimport Nav from './components/Nav';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport './index.css';\n\nimport \"./assets/fonts/LEMONMILK-Regular.woff2\";\nimport \"./assets/fonts/LEMONMILK-Regular.woff\";\nimport \"./assets/fonts/LEMONMILK-Medium.woff2\";\nimport \"./assets/fonts/LEMONMILK-Medium.woff\";\n\n\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n  onError: (e) => { console.log(e) }\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n              <Route\n                path=\"/\"\n                element={<Home />}\n              />\n              <Route\n                path=\"/login\"\n                element={<Login />}\n              />\n              <Route\n                path=\"/signup\"\n                element={<Signup />}\n              />\n              <Route\n                path=\"/profiles/:githubUser\"\n                element={<Profile />}\n              />\n              <Route\n                path=\"/profiles/\"\n                element={<Profile />}\n              />\n              <Route\n                path=\"/me\"\n                element={<Dashboard />}\n              />\n\n              {/*\n              <Route \n                path=\"/profiles/:username\" \n                element={<Profile />}\n              />\n              <Route \n                path=\"/projects/:projectId\" \n                element={<Project />}\n              />\n               <Route \n                path=\"/projects/create\" \n                element={<CreateProject />}\n              />\n              <Route \n                path=\"*\" \n                element={<NotFound />}\n              /> */}\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","E:\\Bootcamp\\git-match\\client\\src\\pages\\Home.js",["92"],"import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\n\nimport Dashboard from './Dashboard'\n// import Header from '../components/Header';\n// import Footer from '../components/Footer';\nimport Nav from '../components/Nav';\n// import Login from './pages/Login';\n\nimport '../index.css';\n\nconst Home = () => {\n\n  let loggedIn = localStorage.getItem('id_token');\n\n  return (\n    //if logged in display dashboard, otherwise display home\n    <main>\n\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px solid #1a1a1a' }}\n        >\n        </div>\n        <div className=\"col-12 col-md-8 mb-3\">\n\n          {loggedIn ? (\n            <div>\n              <Nav />\n              <Dashboard />\n            </div>\n          ) : (\n            <div>\n              <>\n                <Link className=\"btn btn-lg m-2 gradient\" to=\"/login\">\n                  Login\n                </Link>\n                <Link className=\"btn btn-lg m-2 gradient\" to=\"/signup\">\n                  Signup\n                </Link>\n              </>\n            </div>\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;","E:\\Bootcamp\\git-match\\client\\src\\pages\\CreateProject.js",[],"E:\\Bootcamp\\git-match\\client\\src\\pages\\NotFound.js",[],"E:\\Bootcamp\\git-match\\client\\src\\pages\\Signup.js",["93"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER, ADD_PROJECT} from '../utils/mutations';\n//import  API  from '../utils/fetch';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n    const [formState, setFormState] = useState({\n        githubUser: '',\n        password: '',\n        email: ''\n    });\n    const [signup, { error, data }] = useMutation(ADD_USER);\n    //const [addProject] = useMutation(ADD_PROJECT)\n  \n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        })\n    };\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            // const fetchedUser = await API.fetchUser(formState.githubUser);\n            // console.log({...formState, ...fetchedUser});\n\n            const { data } = await signup({\n                variables: { \n                  ...formState,\n                  //...fetchedUser\n                  // projects: fetchedProjects \n                },\n            });        \n            \n\n            \n            console.log(data);\n\n            // const fetchedProjects = await API.fetchStarred(formState.githubUser);\n            // console.log(fetchedProjects);\n            // for (let i = 0; i<fetchedProjects.length; i++) {\n            //   console.log(i,fetchedProjects[i]);\n            //   const myObj = {...fetchedProjects[i], githubUser: formState.githubUser};\n            //   console.log('myobj');\n            //   console.log(myObj);\n            //   const { projectData } = addProject({\n            //     variables: myObj\n            //   });\n            //   console.log('projectData', projectData);\n            // }\n\n\n            Auth.login(data.signup.token);\n            \n            // const { projectData } = await addProject({\n            //   variables: \n            // })\n        } catch (e) {\n            console.error(e)\n        }\n    };\n\n    return (\n        <main className=\"flex-row justify-center mb-4\">\n          <div className=\"col-12 col-lg-10\">\n            <div className=\"card\">\n              <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n              <div className=\"card-body\">\n                {data ? (\n                  //  window.location.assign('/me');\n                  <p>\n                    Success! You may now head{' '}\n                    <Link to=\"/\">back to the homepage.</Link>\n                  </p>\n                ) : (\n                  <form onSubmit={handleFormSubmit}>\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"Your github User\"\n                      name=\"githubUser\"\n                      type=\"text\"\n                      value={formState.githubUser}\n                      onChange={handleChange}\n                    />\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"Your email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={formState.email}\n                      onChange={handleChange}\n                    />\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"******\"\n                      name=\"password\"\n                      type=\"password\"\n                      value={formState.password}\n                      onChange={handleChange}\n                    />\n                    <button\n                      className=\"btn btn-block btn-info\"\n                      style={{ cursor: 'pointer' }}\n                      type=\"submit\"\n                    >\n                      Submit\n                    </button>\n                  </form>\n                )}\n    \n                {error && (\n                  <div className=\"my-3 p-3 bg-danger text-white\">\n                    {error.message}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </main>\n      );\n};\n\nexport default Signup;","E:\\Bootcamp\\git-match\\client\\src\\components\\Nav.js",["94"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Auth from \"../utils/auth\";\n\nconst Nav = () => {\n    return (\n        <div>\n            <Link to=\"/profiles\">My Profile</Link>\n        </div>\n    )\n}\nexport default Nav;","E:\\Bootcamp\\git-match\\client\\src\\pages\\Dashboard.js",["95","96","97","98","99"],"// import React, { useState, useEffect } from 'react';\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { QUERY_SINGLE_USER, QUERY_ME } from \"../utils/queries\";\nimport { useQuery, useState, useMutation } from \"@apollo/client\";\nimport Matches from \"../components/Matches\";\nimport Auth from '../utils/auth';\n\n\nconst Dashboard = () => {\n  const { githubUser } = useParams();\n\n  const { loading, data } = useQuery(QUERY_ME)\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  const user = data?.me;\n    // const matches = user.match;\n    console.log(user)\n\n    \n\n  return (\n    <div>\n      <h5>{Auth.getProfile().data.githubUser} Dashboard</h5>\n      <h4>Users Matches</h4>\n      <div>\n        \n          {data.me.match.map((match) => (\n            <Matches \n            key={match.githubUser2}\n            githubUser2= {match.githubUser2}  \n            />\n          ))}\n        \n      </div>\n    </div>\n\n  )\n};\nexport default Dashboard;\n","E:\\Bootcamp\\git-match\\client\\src\\pages\\Login.js",[],"E:\\Bootcamp\\git-match\\client\\src\\components\\Header.js",[],"E:\\Bootcamp\\git-match\\client\\src\\components\\Project.js",["100","101","102","103"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { Link } from 'react-router-dom'\n\n\nexport default function Project(props) {\n  \n\n  return (\n    <div\n      className=\"card portfolio-items col-md-5\"\n      data-aos=\"fade-up\"\n      data-aos-easing=\"linear\"\n      data-aos-duration=\"1500\"\n    >\n      {/* <img\n        className=\"card-img-top\"\n        src={props.}\n        alt=\"development project thumbnail\"\n      /> */}\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">\n          {props.name}\n          <br />\n        </h4>\n        <p className=\"card-text\">{props.description}</p>\n        <a\n          href={props.repo_link}\n          target=\"_blank\"\n          className=\"btn btn-primary gradient\"\n          rel=\"noreferrer\"\n        >\n          Code\n        </a>\n        {/* <a\n          href={props.deployed_url}\n          target=\"_blank\"\n          className=\"btn btn-primary\"\n          rel=\"noreferrer\"\n        >\n          Site\n        </a> */}\n      </div>\n    </div>\n  );\n}","E:\\Bootcamp\\git-match\\client\\src\\components\\Footer.js",[],"E:\\Bootcamp\\git-match\\client\\src\\pages\\Profile.js",["104","105","106","107","108","109","110"],"import {React, useState} from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\n\nimport Match from \"../components/Match\";\nimport Project from \"../components/Project\";\n\nimport { QUERY_SINGLE_USER, QUERY_ME, QUERY_USERS } from \"../utils/queries\";\n\nimport { ADD_SWIPE, ADD_MATCH } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\nimport nextButton from \"../assets/images/next.png\";\nimport matchButton from \"../assets/images/match-double.png\";\nimport { Modal, Button } from 'react-bootstrap';\n\nconst Profile = () => {\n  //const [profileState, setProfileState] = useState({ githubUser2: '' });\n  const [isOpen, setIsOpen] = useState(false);\n  const { githubUser } = useParams();\n\n  const { loading, data } = useQuery(\n    githubUser ? QUERY_SINGLE_USER : QUERY_ME,\n    {\n      variables: { githubUser: githubUser },\n    }\n  );\n\n  const allUserData = useQuery(QUERY_USERS);\n\n  console.log(\"all users\");\n  console.log(allUserData.data);\n\n  const [addSwipe, swipeData] = useMutation(ADD_SWIPE);\n  //look for swipeData.error and swipeData.data\n\n  const [addMatch, matchData] = useMutation(ADD_MATCH);\n  //look for matchData.error and matchData.data\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  //console.log(data);\n  const user = data?.me || data?.user || {};\n  console.log(\"user\", data);\n  //if the user is logged in and the person logged in is on thier own profile, set logged in\n  let loggedIn = false;\n  if (Auth.loggedIn() && Auth.getProfile().data.githubUser === githubUser) {\n    loggedIn = true;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.githubUser) {\n    return (\n      <h4>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n\n  //EVENT handler for next button\n  let nextUser;\n\n  if (allUserData.data) {\n    console.log(\"all users\");\n    console.log(allUserData.data);\n\n    nextUser =\n      allUserData.data.users[Math.floor(Math.random() * allUserData.data.users.length)];\n\n      console.log(\"index:\" + Math.floor(Math.random() * allUserData.data.users.length))\n    console.log(\"nextUser\");\n    console.log(nextUser);\n  }\n\n  //EVENT handler for swipe button\n  const handleSwipe = async (event) => {\n    console.log(\"someone swiped!\");\n    console.log(event);\n    console.log(event.target.dataset.user2);\n\n    const githubUser1 = Auth.getProfile().data.githubUser;\n    const githubUser2 = event.target.dataset.user2;\n\n    console.log(\"githubUser2\");\n    console.log(githubUser2);\n\n    console.log(\"githubUser1\");\n    console.log(githubUser1);\n\n    try {\n      //add swipe\n      const newSwipeData = await addSwipe({\n        variables: { githubUser: githubUser1, githubUser2: githubUser2 },\n      });\n\n      console.log(\"newswipedata\");\n      console.log(newSwipeData);\n\n      // //check user2  the profile we are viewing\n      console.log(\"user 2 data\");\n      console.log(data);\n      console.log(data.user.swipeRight);\n\n      const profileSwipeRight = data.user.swipeRight;\n\n      const uniqueSwipe = [...new Set(profileSwipeRight)];\n      console.log(uniqueSwipe);\n\n      for (let i = 0; i < uniqueSwipe.length; i++) {\n        console.log(uniqueSwipe[i].githubUser2);\n        if (uniqueSwipe[i].githubUser2 === githubUser1) {\n          console.log(\"both users have matched!!\");\n          addToMatches(githubUser1, githubUser2);\n          setIsOpen(true);\n          setShow(true);\n        } else {\n          console.log(\"no match\");\n        }\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const addToMatches = async (githubUser1, githubUser2) => {\n    // //add matches\n    const newMatchData1 = await addMatch({\n      variables: { githubUser: githubUser1, githubUser2: githubUser2 },\n    });\n    console.log(\"newMatchData1\");\n    console.log(newMatchData1);\n\n    const newMatchData2 = await addMatch({\n      variables: { githubUser: githubUser2, githubUser2: githubUser1 },\n    });\n\n    console.log(\"newMatchData2\");\n    console.log(newMatchData2);\n    //add matches\n  };\n\n  return (\n    <div>\n      <div className=\"flex-row justify-center mb-3\">\n        <div className=\"col-12 col-md-10 bg-dark text-light p-3 mb-5\">\n          <h2>\n            Viewing {githubUser ? `${user.githubUser}'s` : \"your\"} profile.\n          </h2>\n        </div>\n\n        <div className=\"col-md-5\">\n          <img src={user.avatar} alt=\"user avatar from github\" />\n        </div>\n\n        <div className=\"col-md-5\">\n          <div>\n            <h4>{user.name}</h4>\n            <p>email: {user.email}</p>\n            <p>bio: {user.bio}</p>\n            <p>location: {user.location}</p>\n          </div>\n        </div>\n\n        <div>\n\n          <div>\n            {nextUser && (\n              <Link to={`/profiles/${nextUser.githubUser}`}>\n                <img\n                  src={nextButton}\n                  alt=\"next button\"\n                  data-user2={user.githubUser}\n                />\n              </Link>\n            )}\n            \n          </div>\n\n          <div onClick={handleSwipe}>\n            <img\n              src={matchButton}\n              alt=\"match button\"\n              data-user2={user.githubUser}\n              style={{ cursor: 'pointer' }}\n            />\n          </div>\n        </div>\n\n        <div\n          id=\"portfolio-list-section\"\n          className=\"row d-flex justify-content-around\"\n        >\n          <h3> {user.githubUser}'s Starred Repos</h3>\n          {user.projects.map((project) => (\n            <Project\n              key={project.name}\n              name={project.name}\n              description={project.description}\n              repo_link={project.repo_link}\n            />\n          ))}\n        </div>\n      </div>\n\n      <div>\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>You've GITMATCHED!</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Start collaborating!</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose} className=\"gradient\">\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>      \n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","E:\\Bootcamp\\git-match\\client\\src\\components\\Matches.js",["111"],"E:\\Bootcamp\\git-match\\client\\src\\utils\\mutations.js",[],"E:\\Bootcamp\\git-match\\client\\src\\utils\\auth.js",[],"E:\\Bootcamp\\git-match\\client\\src\\utils\\queries.js",[],"E:\\Bootcamp\\git-match\\client\\src\\components\\Match.js",[],"E:\\Bootcamp\\git-match\\client\\src\\components\\Modal.js",["112"],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":17,"column":8,"nodeType":"119","messageId":"120","endLine":17,"endColumn":15},{"ruleId":"117","severity":1,"message":"121","line":19,"column":8,"nodeType":"119","messageId":"120","endLine":19,"endColumn":21},{"ruleId":"117","severity":1,"message":"122","line":20,"column":8,"nodeType":"119","messageId":"120","endLine":20,"endColumn":16},{"ruleId":"117","severity":1,"message":"123","line":21,"column":8,"nodeType":"119","messageId":"120","endLine":21,"endColumn":11},{"ruleId":"117","severity":1,"message":"124","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":18},{"ruleId":"117","severity":1,"message":"125","line":5,"column":20,"nodeType":"119","messageId":"120","endLine":5,"endColumn":31},{"ruleId":"117","severity":1,"message":"126","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":12},{"ruleId":"117","severity":1,"message":"127","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":18},{"ruleId":"117","severity":1,"message":"128","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":27},{"ruleId":"117","severity":1,"message":"129","line":4,"column":20,"nodeType":"119","messageId":"120","endLine":4,"endColumn":28},{"ruleId":"117","severity":1,"message":"130","line":4,"column":30,"nodeType":"119","messageId":"120","endLine":4,"endColumn":41},{"ruleId":"117","severity":1,"message":"131","line":10,"column":11,"nodeType":"119","messageId":"120","endLine":10,"endColumn":21},{"ruleId":"117","severity":1,"message":"129","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"130","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":21},{"ruleId":"117","severity":1,"message":"126","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":12},{"ruleId":"117","severity":1,"message":"132","line":4,"column":10,"nodeType":"119","messageId":"120","endLine":4,"endColumn":14},{"ruleId":"117","severity":1,"message":"127","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":18},{"ruleId":"117","severity":1,"message":"133","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":13},{"ruleId":"117","severity":1,"message":"134","line":20,"column":10,"nodeType":"119","messageId":"120","endLine":20,"endColumn":16},{"ruleId":"117","severity":1,"message":"135","line":35,"column":20,"nodeType":"119","messageId":"120","endLine":35,"endColumn":29},{"ruleId":"117","severity":1,"message":"136","line":38,"column":20,"nodeType":"119","messageId":"120","endLine":38,"endColumn":29},{"ruleId":"117","severity":1,"message":"137","line":44,"column":9,"nodeType":"119","messageId":"120","endLine":44,"endColumn":19},{"ruleId":"117","severity":1,"message":"138","line":52,"column":5,"nodeType":"119","messageId":"120","endLine":52,"endColumn":13},{"ruleId":"117","severity":1,"message":"129","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"132","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":14},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'Project' is defined but never used.","Identifier","unusedVar","'CreateProject' is defined but never used.","'NotFound' is defined but never used.","'Nav' is defined but never used.","'useQuery' is defined but never used.","'ADD_PROJECT' is defined but never used.","'Auth' is defined but never used.","'Navigate' is defined but never used.","'QUERY_SINGLE_USER' is defined but never used.","'useState' is defined but never used.","'useMutation' is defined but never used.","'githubUser' is assigned a value but never used.","'Link' is defined but never used.","'Match' is defined but never used.","'isOpen' is assigned a value but never used.","'swipeData' is assigned a value but never used.","'matchData' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]