[{"E:\\Bootcamp\\git-match\\client\\src\\index.js":"1","E:\\Bootcamp\\git-match\\client\\src\\App.js":"2","E:\\Bootcamp\\git-match\\client\\src\\pages\\Home.js":"3","E:\\Bootcamp\\git-match\\client\\src\\pages\\Signup.js":"4","E:\\Bootcamp\\git-match\\client\\src\\pages\\Login.js":"5","E:\\Bootcamp\\git-match\\client\\src\\pages\\Profile.js":"6","E:\\Bootcamp\\git-match\\client\\src\\pages\\NotFound.js":"7","E:\\Bootcamp\\git-match\\client\\src\\pages\\CreateProject.js":"8","E:\\Bootcamp\\git-match\\client\\src\\components\\Header.js":"9","E:\\Bootcamp\\git-match\\client\\src\\pages\\Dashboard.js":"10","E:\\Bootcamp\\git-match\\client\\src\\components\\Footer.js":"11","E:\\Bootcamp\\git-match\\client\\src\\components\\Nav.js":"12","E:\\Bootcamp\\git-match\\client\\src\\pages\\Project.js":"13","E:\\Bootcamp\\git-match\\client\\src\\components\\Match.js":"14","E:\\Bootcamp\\git-match\\client\\src\\utils\\auth.js":"15","E:\\Bootcamp\\git-match\\client\\src\\utils\\fetch.js":"16","E:\\Bootcamp\\git-match\\client\\src\\utils\\mutations.js":"17","E:\\Bootcamp\\git-match\\client\\src\\utils\\queries.js":"18"},{"size":266,"mtime":1647044719695,"results":"19","hashOfConfig":"20"},{"size":3081,"mtime":1647044719692,"results":"21","hashOfConfig":"20"},{"size":938,"mtime":1647044719696,"results":"22","hashOfConfig":"20"},{"size":3479,"mtime":1647044719697,"results":"23","hashOfConfig":"20"},{"size":2690,"mtime":1647044719696,"results":"24","hashOfConfig":"20"},{"size":1549,"mtime":1647044719697,"results":"25","hashOfConfig":"20"},{"size":0,"mtime":1647044719696,"results":"26","hashOfConfig":"20"},{"size":0,"mtime":1647044719695,"results":"27","hashOfConfig":"20"},{"size":1299,"mtime":1647044719693,"results":"28","hashOfConfig":"20"},{"size":2112,"mtime":1647047789997,"results":"29","hashOfConfig":"20"},{"size":641,"mtime":1647044719693,"results":"30","hashOfConfig":"20"},{"size":0,"mtime":1647044719693,"results":"31","hashOfConfig":"20"},{"size":152,"mtime":1647044719697,"results":"32","hashOfConfig":"20"},{"size":0,"mtime":1647044719693,"results":"33","hashOfConfig":"20"},{"size":722,"mtime":1647044719697,"results":"34","hashOfConfig":"20"},{"size":1709,"mtime":1647047145509,"results":"35","hashOfConfig":"20"},{"size":851,"mtime":1647044719698,"results":"36","hashOfConfig":"20"},{"size":1125,"mtime":1647044719699,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"oail6",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"E:\\Bootcamp\\git-match\\client\\src\\index.js",[],["80","81"],"E:\\Bootcamp\\git-match\\client\\src\\App.js",["82","83","84","85"],"import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport Dashboard from './pages/Dashboard';\nimport Project from './pages/Project';\nimport Profile from './pages/Profile';\nimport CreateProject from './pages/CreateProject';\nimport NotFound from './pages/NotFound';\nimport Nav from './components/Nav';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport './index.css';\n\nimport \"./fonts/LEMONMILK-Regular.woff2\";\nimport \"./fonts/LEMONMILK-Regular.woff\";\nimport \"./fonts/LEMONMILK-Medium.woff2\";\nimport \"./fonts/LEMONMILK-Medium.woff\";\n\n\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n              <Route \n                path=\"/\"\n                element={<Home />}\n              />\n              <Route \n                path=\"/login\" \n                element={<Login />}\n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />}\n              />\n               <Route \n                path=\"/profiles/:username\" \n                element={<Profile />}\n              />\n               \n               <Route \n                path=\"/me\" \n                element={<Dashboard />}\n              />\n\n              {/*\n              <Route \n                path=\"/profiles/:username\" \n                element={<Profile />}\n              />\n              <Route \n                path=\"/projects/:projectId\" \n                element={<Project />}\n              />\n               <Route \n                path=\"/projects/create\" \n                element={<CreateProject />}\n              />\n              <Route \n                path=\"*\" \n                element={<NotFound />}\n              /> */}\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","E:\\Bootcamp\\git-match\\client\\src\\pages\\Home.js",["86"],"import React from 'react';\nimport { useQuery } from '@apollo/client';\n\n//import Dashboard from './pages/Dashboard'\n// import Header from '../components/Header';\n// import Footer from '../components/Footer';\n// import Nav from '../components/Nav';\n// import Login from './pages/Login';\n\nimport '../index.css';\n\nconst Home = () => {\n\n  let loggedIn = localStorage.getItem('id_token');\n\n  return (\n      //if logged in display dashboard, otherwise display home\n    <main>\n    \n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px solid #1a1a1a' }}\n        >\n        </div>\n        <div className=\"col-12 col-md-8 mb-3\">\n          { loggedIn ? (\n            <div> <h2>Dashboard goes here</h2> </div>\n          ) : (\n            <div> <h2>Login buttons go here</h2> </div>\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;","E:\\Bootcamp\\git-match\\client\\src\\pages\\Signup.js",["87"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER, ADD_PROJECT} from '../utils/mutations';\nimport  API  from '../utils/fetch';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n    const [formState, setFormState] = useState({\n        githubUser: '',\n        password: '',\n        email: ''\n    });\n    const [signup, { error, data }] = useMutation(ADD_USER);\n    \n  \n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        })\n    };\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            const fetchedUser = await API.fetchUser(formState.githubUser);\n            console.log({...formState, ...fetchedUser});\n\n            const { data } = await signup({\n                variables: { \n                  ...formState,\n                  ...fetchedUser\n                  //  projects: fetchedProjects \n                },\n            });                  \n            console.log(data);\n            Auth.login(data.signup.token);           \n            // const { projectData } = await addProject({\n            //   variables:\n            // })\n        } catch (e) {\n            console.error(e)\n        }\n    };\n\n    return (\n        <main className=\"flex-row justify-center mb-4\">\n          <div className=\"col-12 col-lg-10\">\n            <div className=\"card\">\n              <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n              <div className=\"card-body\">\n                {data ? (\n                  //  window.location.assign('/me');\n                  <p>\n                    Success! You may now head{' '}\n                    <Link to=\"/\">back to the homepage.</Link>\n                  </p>\n                ) : (\n                  <form onSubmit={handleFormSubmit}>\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"Your github User\"\n                      name=\"githubUser\"\n                      type=\"text\"\n                      value={formState.githubUser}\n                      onChange={handleChange}\n                    />\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"Your email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={formState.email}\n                      onChange={handleChange}\n                    />\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"******\"\n                      name=\"password\"\n                      type=\"password\"\n                      value={formState.password}\n                      onChange={handleChange}\n                    />\n                    <button\n                      className=\"btn btn-block btn-info\"\n                      style={{ cursor: 'pointer' }}\n                      type=\"submit\"\n                    >\n                      Submit\n                    </button>\n                  </form>\n                )}\n    \n                {error && (\n                  <div className=\"my-3 p-3 bg-danger text-white\">\n                    {error.message}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </main>\n      );\n};\n\nexport default Signup;","E:\\Bootcamp\\git-match\\client\\src\\pages\\Login.js",[],"E:\\Bootcamp\\git-match\\client\\src\\pages\\Profile.js",["88"],"import React from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Match from '../components/Match';\n\nimport { QUERY_SINGLE_USER, QUERY_ME } from '../utils/queries';\n\nimport Auth from '../utils/auth';\n\nconst Profile = () => {\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_SINGLE_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n  // navigate to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Navigate to=\"/me\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.username) {\n    return (\n      <h4>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"flex-row justify-center mb-3\">\n        <h2 className=\"col-12 col-md-10 bg-dark text-light p-3 mb-5\">\n          Viewing {userParam ? `${user.githubUser}'s` : 'your'} profile.\n        </h2>\n\n        <div className=\"col-12 col-md-10 mb-5\">\n        <h3> Matches will go here. </h3>\n        </div>\n        {!userParam && (\n          <div\n            className=\"col-12 col-md-10 mb-3 p-3\"\n            style={{ border: '1px dotted #1a1a1a' }}\n          >\n              <h3> Something else can go here</h3>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;","E:\\Bootcamp\\git-match\\client\\src\\pages\\NotFound.js",[],"E:\\Bootcamp\\git-match\\client\\src\\pages\\CreateProject.js",[],"E:\\Bootcamp\\git-match\\client\\src\\components\\Header.js",[],"E:\\Bootcamp\\git-match\\client\\src\\pages\\Dashboard.js",["89","90","91","92"],"E:\\Bootcamp\\git-match\\client\\src\\components\\Footer.js",[],"E:\\Bootcamp\\git-match\\client\\src\\components\\Nav.js",[],"E:\\Bootcamp\\git-match\\client\\src\\pages\\Project.js",["93","94","95","96","97"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\n\nconst Project = () => {\n    \n}","E:\\Bootcamp\\git-match\\client\\src\\components\\Match.js",[],"E:\\Bootcamp\\git-match\\client\\src\\utils\\auth.js",[],"E:\\Bootcamp\\git-match\\client\\src\\utils\\fetch.js",[],"E:\\Bootcamp\\git-match\\client\\src\\utils\\mutations.js",[],"E:\\Bootcamp\\git-match\\client\\src\\utils\\queries.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":15,"column":8,"nodeType":"104","messageId":"105","endLine":15,"endColumn":15},{"ruleId":"102","severity":1,"message":"106","line":17,"column":8,"nodeType":"104","messageId":"105","endLine":17,"endColumn":21},{"ruleId":"102","severity":1,"message":"107","line":18,"column":8,"nodeType":"104","messageId":"105","endLine":18,"endColumn":16},{"ruleId":"102","severity":1,"message":"108","line":19,"column":8,"nodeType":"104","messageId":"105","endLine":19,"endColumn":11},{"ruleId":"102","severity":1,"message":"109","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":18},{"ruleId":"102","severity":1,"message":"110","line":5,"column":20,"nodeType":"104","messageId":"105","endLine":5,"endColumn":31},{"ruleId":"102","severity":1,"message":"111","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":13},{"ruleId":"102","severity":1,"message":"112","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":21},{"ruleId":"102","severity":1,"message":"110","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":21},{"ruleId":"102","severity":1,"message":"113","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":20},{"ruleId":"102","severity":1,"message":"114","line":4,"column":22,"nodeType":"104","messageId":"105","endLine":4,"endColumn":30},{"ruleId":"102","severity":1,"message":"115","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":13},{"ruleId":"102","severity":1,"message":"116","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"112","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":21},{"ruleId":"102","severity":1,"message":"117","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":12},{"ruleId":"102","severity":1,"message":"118","line":5,"column":7,"nodeType":"104","messageId":"105","endLine":5,"endColumn":14},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'Project' is defined but never used.","Identifier","unusedVar","'CreateProject' is defined but never used.","'NotFound' is defined but never used.","'Nav' is defined but never used.","'useQuery' is defined but never used.","'ADD_PROJECT' is defined but never used.","'Match' is defined but never used.","'useMutation' is defined but never used.","'QUERY_USER' is defined but never used.","'QUERY_ME' is defined but never used.","'React' is defined but never used.","'useState' is defined but never used.","'Auth' is defined but never used.","'Project' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]