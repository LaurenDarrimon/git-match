[{"E:\\Bootcamp\\git-match\\client\\src\\index.js":"1","E:\\Bootcamp\\git-match\\client\\src\\App.js":"2","E:\\Bootcamp\\git-match\\client\\src\\pages\\Signup.js":"3","E:\\Bootcamp\\git-match\\client\\src\\pages\\Dashboard.js":"4","E:\\Bootcamp\\git-match\\client\\src\\pages\\Login.js":"5","E:\\Bootcamp\\git-match\\client\\src\\pages\\CreateProject.js":"6","E:\\Bootcamp\\git-match\\client\\src\\pages\\Profile.js":"7","E:\\Bootcamp\\git-match\\client\\src\\pages\\Home.js":"8","E:\\Bootcamp\\git-match\\client\\src\\pages\\NotFound.js":"9","E:\\Bootcamp\\git-match\\client\\src\\pages\\Project.js":"10","E:\\Bootcamp\\git-match\\client\\src\\components\\Header.js":"11","E:\\Bootcamp\\git-match\\client\\src\\components\\Footer.js":"12","E:\\Bootcamp\\git-match\\client\\src\\components\\Nav.js":"13","E:\\Bootcamp\\git-match\\client\\src\\components\\Match.js":"14","E:\\Bootcamp\\git-match\\client\\src\\utils\\fetch.js":"15","E:\\Bootcamp\\git-match\\client\\src\\utils\\mutations.js":"16","E:\\Bootcamp\\git-match\\client\\src\\utils\\queries.js":"17","E:\\Bootcamp\\git-match\\client\\src\\utils\\auth.js":"18"},{"size":266,"mtime":1646713346688,"results":"19","hashOfConfig":"20"},{"size":3065,"mtime":1646940390556,"results":"21","hashOfConfig":"20"},{"size":3592,"mtime":1646954999875,"results":"22","hashOfConfig":"20"},{"size":0,"mtime":1646713346690,"results":"23","hashOfConfig":"20"},{"size":2690,"mtime":1646892207804,"results":"24","hashOfConfig":"20"},{"size":0,"mtime":1646713346689,"results":"25","hashOfConfig":"20"},{"size":1549,"mtime":1646940390565,"results":"26","hashOfConfig":"20"},{"size":938,"mtime":1646940390559,"results":"27","hashOfConfig":"20"},{"size":0,"mtime":1646713346691,"results":"28","hashOfConfig":"20"},{"size":0,"mtime":1646713346692,"results":"29","hashOfConfig":"20"},{"size":1297,"mtime":1646813694145,"results":"30","hashOfConfig":"20"},{"size":641,"mtime":1646813694141,"results":"31","hashOfConfig":"20"},{"size":0,"mtime":1646713346687,"results":"32","hashOfConfig":"20"},{"size":0,"mtime":1646713346687,"results":"33","hashOfConfig":"20"},{"size":1624,"mtime":1646953209350,"results":"34","hashOfConfig":"20"},{"size":865,"mtime":1646954689053,"results":"35","hashOfConfig":"20"},{"size":1125,"mtime":1646950213826,"results":"36","hashOfConfig":"20"},{"size":720,"mtime":1646813694224,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"oail6",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"E:\\Bootcamp\\git-match\\client\\src\\index.js",[],["79","80"],"E:\\Bootcamp\\git-match\\client\\src\\App.js",["81","82","83","84","85"],"import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport Dashboard from './pages/Dashboard';\nimport Project from './pages/Project';\nimport Profile from './pages/Profile';\nimport CreateProject from './pages/CreateProject';\nimport NotFound from './pages/NotFound';\nimport Nav from './components/Nav';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport './index.css';\n\nimport \"./fonts/LEMONMILK-Regular.woff2\";\nimport \"./fonts/LEMONMILK-Regular.woff\";\nimport \"./fonts/LEMONMILK-Medium.woff2\";\nimport \"./fonts/LEMONMILK-Medium.woff\";\n\n\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n              <Route \n                path=\"/\"\n                element={<Home />}\n              />\n              <Route \n                path=\"/login\" \n                element={<Login />}\n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />}\n              />\n               <Route \n                path=\"/profiles/:username\" \n                element={<Profile />}\n              />\n               {/*\n               <Route \n                path=\"/me\" \n                element={<Dashboard />}\n              />\n              <Route \n                path=\"/profiles/:username\" \n                element={<Profile />}\n              />\n              <Route \n                path=\"/projects/:projectId\" \n                element={<Project />}\n              />\n               <Route \n                path=\"/projects/create\" \n                element={<CreateProject />}\n              />\n              <Route \n                path=\"*\" \n                element={<NotFound />}\n              /> */}\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","E:\\Bootcamp\\git-match\\client\\src\\pages\\Signup.js",["86","87","88"],"E:\\Bootcamp\\git-match\\client\\src\\pages\\Dashboard.js",[],"E:\\Bootcamp\\git-match\\client\\src\\pages\\Login.js",[],"E:\\Bootcamp\\git-match\\client\\src\\pages\\CreateProject.js",[],"E:\\Bootcamp\\git-match\\client\\src\\pages\\Profile.js",["89"],"import React from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Match from '../components/Match';\n\nimport { QUERY_SINGLE_USER, QUERY_ME } from '../utils/queries';\n\nimport Auth from '../utils/auth';\n\nconst Profile = () => {\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_SINGLE_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n  // navigate to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Navigate to=\"/me\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.username) {\n    return (\n      <h4>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"flex-row justify-center mb-3\">\n        <h2 className=\"col-12 col-md-10 bg-dark text-light p-3 mb-5\">\n          Viewing {userParam ? `${user.githubUser}'s` : 'your'} profile.\n        </h2>\n\n        <div className=\"col-12 col-md-10 mb-5\">\n        <h3> Matches will go here. </h3>\n        </div>\n        {!userParam && (\n          <div\n            className=\"col-12 col-md-10 mb-3 p-3\"\n            style={{ border: '1px dotted #1a1a1a' }}\n          >\n              <h3> Something else can go here</h3>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;","E:\\Bootcamp\\git-match\\client\\src\\pages\\Home.js",["90"],"import React from 'react';\nimport { useQuery } from '@apollo/client';\n\n//import Dashboard from './pages/Dashboard'\n// import Header from '../components/Header';\n// import Footer from '../components/Footer';\n// import Nav from '../components/Nav';\n// import Login from './pages/Login';\n\nimport '../index.css';\n\nconst Home = () => {\n\n  let loggedIn = localStorage.getItem('id_token');\n\n  return (\n      //if logged in display dashboard, otherwise display home\n    <main>\n    \n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px solid #1a1a1a' }}\n        >\n        </div>\n        <div className=\"col-12 col-md-8 mb-3\">\n          { loggedIn ? (\n            <div> <h2>Dashboard goes here</h2> </div>\n          ) : (\n            <div> <h2>Login buttons go here</h2> </div>\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;","E:\\Bootcamp\\git-match\\client\\src\\pages\\NotFound.js",[],"E:\\Bootcamp\\git-match\\client\\src\\pages\\Project.js",[],"E:\\Bootcamp\\git-match\\client\\src\\components\\Header.js",[],"E:\\Bootcamp\\git-match\\client\\src\\components\\Footer.js",[],"E:\\Bootcamp\\git-match\\client\\src\\components\\Nav.js",[],"E:\\Bootcamp\\git-match\\client\\src\\components\\Match.js",[],"E:\\Bootcamp\\git-match\\client\\src\\utils\\fetch.js",["91"],"import { shouldCanonizeResults } from '@apollo/client/cache/inmemory/helpers';\nimport axios from 'axios';\n\n\nconst API = {\n  //fetch the users info from GitHUb API\n  fetchUser: function (user) {\n    return new Promise((resolve, reject) => {\n      axios.get(`https://api.github.com/users/${user}`)\n        .then((res) => {\n          //Populate the database\n          console.log('res', res);\n          const user = res.data;\n          console.log('user',user);\n          const results = {\n            name: user.name,\n            avatar: user.avatar_url,\n            blog: user.blog,\n            location: user.location,\n            member_since: user.created_at,\n            bio: user.bio\n          };\n          resolve(results);\n\n\n        }).catch((err) => reject(err));\n    });\n  },\n  //fetch a user starred repos from GitHUb API\n  fetchStarred: (user) => {\n    axios.get(`https://api.github.com/users/${user}/starred`)\n      .then((res) => {\n        const projects = res.data.results;\n        const results = projects.map((project) => {\n          return {\n            name: project.name,\n            description: project.description,\n            repo_link: project.html_url\n\n          }\n        })\n        return results;\n      })\n  },\n\n  //fetch a repo's programming languagesfrom GitHUb API\n  fetchLanguage: (user, repo) => {\n\n    axios.get(`https://api.github.com/repos/${user}/${repo}/languages`)\n      .then((res) => {\n        return res;\n        // for (const key in res) {\n        //     let language = Object.keys(res);\n        //     let count = res[key],\n        // }\n      })\n  }\n};\n//Fetch \nexport default API;","E:\\Bootcamp\\git-match\\client\\src\\utils\\mutations.js",[],"E:\\Bootcamp\\git-match\\client\\src\\utils\\queries.js",[],"E:\\Bootcamp\\git-match\\client\\src\\utils\\auth.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":14,"column":8,"nodeType":"98","messageId":"99","endLine":14,"endColumn":17},{"ruleId":"96","severity":1,"message":"100","line":15,"column":8,"nodeType":"98","messageId":"99","endLine":15,"endColumn":15},{"ruleId":"96","severity":1,"message":"101","line":17,"column":8,"nodeType":"98","messageId":"99","endLine":17,"endColumn":21},{"ruleId":"96","severity":1,"message":"102","line":18,"column":8,"nodeType":"98","messageId":"99","endLine":18,"endColumn":16},{"ruleId":"96","severity":1,"message":"103","line":19,"column":8,"nodeType":"98","messageId":"99","endLine":19,"endColumn":11},{"ruleId":"96","severity":1,"message":"104","line":17,"column":12,"nodeType":"98","messageId":"99","endLine":17,"endColumn":22},{"ruleId":"96","severity":1,"message":"105","line":17,"column":26,"nodeType":"98","messageId":"99","endLine":17,"endColumn":29},{"ruleId":"96","severity":1,"message":"106","line":17,"column":31,"nodeType":"98","messageId":"99","endLine":17,"endColumn":42},{"ruleId":"96","severity":1,"message":"107","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":13},{"ruleId":"96","severity":1,"message":"108","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":18},{"ruleId":"96","severity":1,"message":"109","line":1,"column":10,"nodeType":"98","messageId":"99","endLine":1,"endColumn":31},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","'Project' is defined but never used.","'CreateProject' is defined but never used.","'NotFound' is defined but never used.","'Nav' is defined but never used.","'addProject' is assigned a value but never used.","'err' is assigned a value but never used.","'projectData' is assigned a value but never used.","'Match' is defined but never used.","'useQuery' is defined but never used.","'shouldCanonizeResults' is defined but never used.","no-global-assign","no-unsafe-negation"]