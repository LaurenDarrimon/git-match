[{"E:\\Bootcamp\\git-match\\client\\src\\index.js":"1","E:\\Bootcamp\\git-match\\client\\src\\App.js":"2","E:\\Bootcamp\\git-match\\client\\src\\pages\\CreateProject.js":"3","E:\\Bootcamp\\git-match\\client\\src\\pages\\Home.js":"4","E:\\Bootcamp\\git-match\\client\\src\\pages\\Signup.js":"5","E:\\Bootcamp\\git-match\\client\\src\\pages\\Login.js":"6","E:\\Bootcamp\\git-match\\client\\src\\pages\\NotFound.js":"7","E:\\Bootcamp\\git-match\\client\\src\\components\\Nav.js":"8","E:\\Bootcamp\\git-match\\client\\src\\components\\Header.js":"9","E:\\Bootcamp\\git-match\\client\\src\\components\\Footer.js":"10","E:\\Bootcamp\\git-match\\client\\src\\pages\\Project.js":"11","E:\\Bootcamp\\git-match\\client\\src\\pages\\Profile.js":"12","E:\\Bootcamp\\git-match\\client\\src\\pages\\Dashboard.js":"13","E:\\Bootcamp\\git-match\\client\\src\\utils\\mutations.js":"14","E:\\Bootcamp\\git-match\\client\\src\\utils\\auth.js":"15","E:\\Bootcamp\\git-match\\client\\src\\utils\\queries.js":"16","E:\\Bootcamp\\git-match\\client\\src\\components\\Match.js":"17","E:\\Bootcamp\\git-match\\client\\src\\utils\\fetch.js":"18","E:\\Bootcamp\\git-match\\client\\src\\components\\ProjectList.js":"19"},{"size":266,"mtime":1647044719695,"results":"20","hashOfConfig":"21"},{"size":3081,"mtime":1647044719692,"results":"22","hashOfConfig":"21"},{"size":0,"mtime":1647044719695,"results":"23","hashOfConfig":"21"},{"size":938,"mtime":1647044719696,"results":"24","hashOfConfig":"21"},{"size":3479,"mtime":1647044719697,"results":"25","hashOfConfig":"21"},{"size":2690,"mtime":1647044719696,"results":"26","hashOfConfig":"21"},{"size":0,"mtime":1647044719696,"results":"27","hashOfConfig":"21"},{"size":0,"mtime":1647044719693,"results":"28","hashOfConfig":"21"},{"size":1299,"mtime":1647044719693,"results":"29","hashOfConfig":"21"},{"size":641,"mtime":1647044719693,"results":"30","hashOfConfig":"21"},{"size":152,"mtime":1647044719697,"results":"31","hashOfConfig":"21"},{"size":1652,"mtime":1647058664522,"results":"32","hashOfConfig":"21"},{"size":2125,"mtime":1647053933362,"results":"33","hashOfConfig":"21"},{"size":851,"mtime":1647044719698,"results":"34","hashOfConfig":"21"},{"size":722,"mtime":1647044719697,"results":"35","hashOfConfig":"21"},{"size":1125,"mtime":1647044719699,"results":"36","hashOfConfig":"21"},{"size":0,"mtime":1647044719693,"results":"37","hashOfConfig":"21"},{"size":1738,"mtime":1647053814980,"results":"38","hashOfConfig":"21"},{"size":1544,"mtime":1647053806455,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"oail6",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"E:\\Bootcamp\\git-match\\client\\src\\index.js",[],["85","86"],"E:\\Bootcamp\\git-match\\client\\src\\App.js",["87","88","89","90"],"import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport Dashboard from './pages/Dashboard';\nimport Project from './pages/Project';\nimport Profile from './pages/Profile';\nimport CreateProject from './pages/CreateProject';\nimport NotFound from './pages/NotFound';\nimport Nav from './components/Nav';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport './index.css';\n\nimport \"./fonts/LEMONMILK-Regular.woff2\";\nimport \"./fonts/LEMONMILK-Regular.woff\";\nimport \"./fonts/LEMONMILK-Medium.woff2\";\nimport \"./fonts/LEMONMILK-Medium.woff\";\n\n\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n              <Route \n                path=\"/\"\n                element={<Home />}\n              />\n              <Route \n                path=\"/login\" \n                element={<Login />}\n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />}\n              />\n               <Route \n                path=\"/profiles/:username\" \n                element={<Profile />}\n              />\n               \n               <Route \n                path=\"/me\" \n                element={<Dashboard />}\n              />\n\n              {/*\n              <Route \n                path=\"/profiles/:username\" \n                element={<Profile />}\n              />\n              <Route \n                path=\"/projects/:projectId\" \n                element={<Project />}\n              />\n               <Route \n                path=\"/projects/create\" \n                element={<CreateProject />}\n              />\n              <Route \n                path=\"*\" \n                element={<NotFound />}\n              /> */}\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","E:\\Bootcamp\\git-match\\client\\src\\pages\\CreateProject.js",[],"E:\\Bootcamp\\git-match\\client\\src\\pages\\Home.js",["91"],"import React from 'react';\nimport { useQuery } from '@apollo/client';\n\n//import Dashboard from './pages/Dashboard'\n// import Header from '../components/Header';\n// import Footer from '../components/Footer';\n// import Nav from '../components/Nav';\n// import Login from './pages/Login';\n\nimport '../index.css';\n\nconst Home = () => {\n\n  let loggedIn = localStorage.getItem('id_token');\n\n  return (\n      //if logged in display dashboard, otherwise display home\n    <main>\n    \n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px solid #1a1a1a' }}\n        >\n        </div>\n        <div className=\"col-12 col-md-8 mb-3\">\n          { loggedIn ? (\n            <div> <h2>Dashboard goes here</h2> </div>\n          ) : (\n            <div> <h2>Login buttons go here</h2> </div>\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;","E:\\Bootcamp\\git-match\\client\\src\\pages\\Signup.js",["92"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER, ADD_PROJECT} from '../utils/mutations';\nimport  API  from '../utils/fetch';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n    const [formState, setFormState] = useState({\n        githubUser: '',\n        password: '',\n        email: ''\n    });\n    const [signup, { error, data }] = useMutation(ADD_USER);\n    \n  \n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        })\n    };\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            const fetchedUser = await API.fetchUser(formState.githubUser);\n            console.log({...formState, ...fetchedUser});\n\n            const { data } = await signup({\n                variables: { \n                  ...formState,\n                  ...fetchedUser\n                  //  projects: fetchedProjects \n                },\n            });                  \n            console.log(data);\n            Auth.login(data.signup.token);           \n            // const { projectData } = await addProject({\n            //   variables:\n            // })\n        } catch (e) {\n            console.error(e)\n        }\n    };\n\n    return (\n        <main className=\"flex-row justify-center mb-4\">\n          <div className=\"col-12 col-lg-10\">\n            <div className=\"card\">\n              <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n              <div className=\"card-body\">\n                {data ? (\n                  //  window.location.assign('/me');\n                  <p>\n                    Success! You may now head{' '}\n                    <Link to=\"/\">back to the homepage.</Link>\n                  </p>\n                ) : (\n                  <form onSubmit={handleFormSubmit}>\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"Your github User\"\n                      name=\"githubUser\"\n                      type=\"text\"\n                      value={formState.githubUser}\n                      onChange={handleChange}\n                    />\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"Your email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={formState.email}\n                      onChange={handleChange}\n                    />\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"******\"\n                      name=\"password\"\n                      type=\"password\"\n                      value={formState.password}\n                      onChange={handleChange}\n                    />\n                    <button\n                      className=\"btn btn-block btn-info\"\n                      style={{ cursor: 'pointer' }}\n                      type=\"submit\"\n                    >\n                      Submit\n                    </button>\n                  </form>\n                )}\n    \n                {error && (\n                  <div className=\"my-3 p-3 bg-danger text-white\">\n                    {error.message}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </main>\n      );\n};\n\nexport default Signup;","E:\\Bootcamp\\git-match\\client\\src\\pages\\Login.js",[],"E:\\Bootcamp\\git-match\\client\\src\\pages\\NotFound.js",[],"E:\\Bootcamp\\git-match\\client\\src\\components\\Nav.js",[],"E:\\Bootcamp\\git-match\\client\\src\\components\\Header.js",[],"E:\\Bootcamp\\git-match\\client\\src\\components\\Footer.js",[],"E:\\Bootcamp\\git-match\\client\\src\\pages\\Project.js",["93","94","95","96","97"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\n\nconst Project = () => {\n    \n}","E:\\Bootcamp\\git-match\\client\\src\\pages\\Profile.js",["98","99"],"import React from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Match from '../components/Match';\n\nimport { QUERY_SINGLE_USER, QUERY_ME } from '../utils/queries';\nimport ProjectList from '../components/ProjectList';\n\n\nimport Auth from '../utils/auth';\n\nconst Profile = () => {\n  const { githubUser: userParam } = useParams();\n\n  const { loading, data } = useQuery(\n    userParam ? QUERY_SINGLE_USER : QUERY_ME, \n    {\n      variables: { githubUser: userParam },\n    }\n  );\n\n  const user = data?.me || data?.githubUser || {};\n  \n  // navigate to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data._id === userParam) {\n    return <Navigate to=\"/me\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.githubUser) {\n    return (\n      <h4>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"flex-row justify-center mb-3\">\n        {user.avatar}\n        <h2 className=\"col-12 col-md-10 bg-dark text-light p-3 mb-5\">\n          Viewing {userParam ? `${user.githubUser}'s` : 'your'} profile.\n        </h2>\n\n        <div className=\"col-12 col-md-10 mb-5\">\n        <h3> Matches will go here. </h3>\n        </div>\n        {!userParam && (\n          <div\n            className=\"col-12 col-md-10 mb-3 p-3\"\n            style={{ border: '1px dotted #1a1a1a' }}\n          >\n              <h3> Something else can go here</h3>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;","E:\\Bootcamp\\git-match\\client\\src\\pages\\Dashboard.js",["100","101","102","103","104","105"],"import React, { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_PROJECT} from '../utils/mutations';\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\nimport Auth from '../utils/auth';\nimport  API  from '../utils/fetch'\nimport ProjectList from '../components/ProjectList';\nimport { resultKeyNameFromField } from '@apollo/client/utilities';\n\nconst Dashboard = () => {\n    // const [toggle, setToggle] = useState({\n    //     state: 'user'   \n    // });\n    \n    // const [addProject, { error, data }] = useMutation(ADD_PROJECT);\n    const [projectName, setProjectName] = useState(\"\");\n    const [projectDescription, setProjectDescription] = useState(\"\");\n    const [repoLink, setRepoLink] = useState(\"\");\n\n    useEffect(() => {\n      API.fetchStarred(Auth.getProfile().data.githubUser)\n        .then(async (response) => {\n          const data = await response;\n          console.log(data[0].name);\n          // project name\n          if(data && data[0].name){\n            setProjectName(data[0].name);\n          }\n          // project description\n          if(data && data[0].description){\n            setProjectDescription(data[0].description);\n          }\n          // repo link\n          if(data && data[0].repo_link){\n            setRepoLink(data[0].repo_link);\n          }\n        });\n    }, []);\n\n    // function loadProjects() {\n    //     API.fetchStarred(Auth.getProfile().data.githubUser)\n    //       .then(response => response.json())\n    //       .then( data => document.body.append());\n    // }\n    // console.log(loadProjects());\n\n\n    // const CreateProject = projectArray.map((project,index) => {\n    //     const { data } = addProject({\n    //         variables: {\n    //             ...projectArray[index]\n    //         }\n    //     })\n    // })\n\n\n    return (\n        <div>\n            <h5>{Auth.getProfile().data.githubUser} Dashboard</h5>\n            <h4>Projects/Users Matches</h4>\n            <h1>{projectName}</h1>\n            <h2>{projectDescription}</h2>\n            <h2>{repoLink}</h2>\n        </div>\n        \n    )\n}\nexport default Dashboard;\n","E:\\Bootcamp\\git-match\\client\\src\\utils\\mutations.js",[],"E:\\Bootcamp\\git-match\\client\\src\\utils\\auth.js",[],"E:\\Bootcamp\\git-match\\client\\src\\utils\\queries.js",[],"E:\\Bootcamp\\git-match\\client\\src\\components\\Match.js",[],"E:\\Bootcamp\\git-match\\client\\src\\utils\\fetch.js",[],"E:\\Bootcamp\\git-match\\client\\src\\components\\ProjectList.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":15,"column":8,"nodeType":"112","messageId":"113","endLine":15,"endColumn":15},{"ruleId":"110","severity":1,"message":"114","line":17,"column":8,"nodeType":"112","messageId":"113","endLine":17,"endColumn":21},{"ruleId":"110","severity":1,"message":"115","line":18,"column":8,"nodeType":"112","messageId":"113","endLine":18,"endColumn":16},{"ruleId":"110","severity":1,"message":"116","line":19,"column":8,"nodeType":"112","messageId":"113","endLine":19,"endColumn":11},{"ruleId":"110","severity":1,"message":"117","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":18},{"ruleId":"110","severity":1,"message":"118","line":5,"column":20,"nodeType":"112","messageId":"113","endLine":5,"endColumn":31},{"ruleId":"110","severity":1,"message":"119","line":1,"column":8,"nodeType":"112","messageId":"113","endLine":1,"endColumn":13},{"ruleId":"110","severity":1,"message":"120","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"121","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":21},{"ruleId":"110","severity":1,"message":"122","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":12},{"ruleId":"110","severity":1,"message":"123","line":5,"column":7,"nodeType":"112","messageId":"113","endLine":5,"endColumn":14},{"ruleId":"110","severity":1,"message":"124","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":13},{"ruleId":"110","severity":1,"message":"125","line":8,"column":8,"nodeType":"112","messageId":"113","endLine":8,"endColumn":19},{"ruleId":"110","severity":1,"message":"121","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":21},{"ruleId":"110","severity":1,"message":"118","line":3,"column":10,"nodeType":"112","messageId":"113","endLine":3,"endColumn":21},{"ruleId":"110","severity":1,"message":"126","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":20},{"ruleId":"110","severity":1,"message":"127","line":4,"column":22,"nodeType":"112","messageId":"113","endLine":4,"endColumn":30},{"ruleId":"110","severity":1,"message":"125","line":7,"column":8,"nodeType":"112","messageId":"113","endLine":7,"endColumn":19},{"ruleId":"110","severity":1,"message":"128","line":8,"column":10,"nodeType":"112","messageId":"113","endLine":8,"endColumn":32},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'Project' is defined but never used.","Identifier","unusedVar","'CreateProject' is defined but never used.","'NotFound' is defined but never used.","'Nav' is defined but never used.","'useQuery' is defined but never used.","'ADD_PROJECT' is defined but never used.","'React' is defined but never used.","'useState' is defined but never used.","'useMutation' is defined but never used.","'Auth' is defined but never used.","'Project' is assigned a value but never used.","'Match' is defined but never used.","'ProjectList' is defined but never used.","'QUERY_USER' is defined but never used.","'QUERY_ME' is defined but never used.","'resultKeyNameFromField' is defined but never used.","no-global-assign","no-unsafe-negation"]